{"antAlert":{"prefix":"antAlert","body":["import { Alert } from 'antd';","","<div>","    <Alert","        message=\"Success Tips\"","        description=\"Detailed description and advice about successful copywriting.\"","        type=\"success\"","        showIcon","    />","    <Alert","        message=\"Informational Notes\"","        description=\"Additional description and information about copywriting.\"","        type=\"info\"","        showIcon","    />","    <Alert","        message=\"Warning\"","        description=\"This is a warning notice about copywriting.\"","        type=\"warning\"","        showIcon","    />","    <Alert","        message=\"Error\"","        description=\"This is an error message about copywriting.\"","        type=\"error\"","        showIcon","    />","</div>",""],"description":"antAlert","group":"ant"},"antAvatar":{"prefix":"antAvatar","body":["import { Avatar } from 'antd';","","<div>","    <Avatar icon=\"user\" />","    <Avatar icon={<Icon type=\"user\" />} />","    <Avatar>U</Avatar>","    <Avatar>USER</Avatar>","    <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />","    <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>U</Avatar>","    <Avatar style={{ backgroundColor: '#87d068' }} icon=\"user\" />","</div>",""],"description":"antAvatar","group":"ant"},"antBadge":{"prefix":"antBadge","body":["import { Badge } from 'antd';","","<div>","    <Badge count={5}>","        <a href=\"#\" className=\"head-example\" />","    </Badge>","    <Badge count={0} showZero>","        <a href=\"#\" className=\"head-example\" />","    </Badge>","    <Badge count={<Icon type=\"clock-circle\" style={{ color: '#f5222d' }} />}>","        <a href=\"#\" className=\"head-example\" />","    </Badge>","</div>",""],"description":"antBadge","group":"ant"},"antBreadcrumb":{"prefix":"antBreadcrumb","body":["import { Breadcrumb } from 'antd';","","<Breadcrumb>","    <Breadcrumb.Item>Home</Breadcrumb.Item>","    <Breadcrumb.Item>","        <a href=\"\">Application Center</a>","    </Breadcrumb.Item>","    <Breadcrumb.Item>","        <a href=\"\">Application List</a>","    </Breadcrumb.Item>","    <Breadcrumb.Item>An Application</Breadcrumb.Item>","</Breadcrumb>",""],"description":"antBreadcrumb","group":"ant"},"antButton":{"prefix":"antButton","body":["import { Button } from 'antd';","","<div>","    <Button type=\"primary\">Primary</Button>","    <Button>Default</Button>","    <Button type=\"dashed\">Dashed</Button>","    <Button type=\"danger\">Danger</Button>","    <Button type=\"link\">Link</Button>","</div>",""],"description":"antButton","group":"ant"},"antButtonGroup":{"prefix":"antButtonGroup","body":["<Button.Group size={size}>","    <Button type=\"primary\">","        <Icon type=\"left\" />","            Backward","        </Button>","    <Button type=\"primary\">","        Forward","            <Icon type=\"right\" />","    </Button>","</Button.Group>",""],"description":"antButtonGroup","group":"ant"},"antCalendar":{"prefix":"antCalendar","body":["import { Calendar } from 'antd';","","<Calendar","    onPanelChange={(value, mode) => {","        console.log(value, mode);","    }}","    dateCellRender={(date) => {","        // date:moment","        console.log(date)","    }}","    monthCellRender={(date) => {","        // date:moment","        console.log(date)","    }}","    onSelect={(date) => {","        // date:moment","        console.log(date)","    }}","/>",""],"description":"antCalendar","group":"ant"},"antCard":{"prefix":"antCard","body":["import { Card } from 'antd';","","<Card","    title=\"Default size card\"","    extra={","        <a href=\"#\">More</a>","    }","    style={{ width: 300 }}","    hoverable={true}","    loading={true}","    size=\"default\"",">","    <p>Card content</p>","    <p>Card content</p>","    <p>Card content</p>","</Card>",""],"description":"antCard","group":"ant"},"antCollapse":{"prefix":"antCollapse","body":["import { Collapse } from 'antd';","const { Panel } = Collapse;","","/**"," * Collapse折叠面板"," * 更多api见官网：https://ant.design/components/collapse-cn/","*/","const genExtra = () => (","    <Icon","        type=\"setting\"","        onClick={event => {","            // If you don't want click extra trigger collapse, you can prevent this:","            event.stopPropagation();","        }}","    />",");","","<Collapse","    accordion","    defaultActiveKey={['1']}","    onChange={(key) => {","        console.log(key);","    }}",">","    <Panel header=\"This is panel header 1\" key=\"1\" extra={genExtra()}>","        <div>123</div>","    </Panel>","    <Panel header=\"This is panel header 2\" key=\"2\" extra={genExtra()}>","        <div>123</div>","    </Panel>","    <Panel header=\"This is panel header 3\" key=\"3\" extra={genExtra()}>","        <div>123</div>","    </Panel>","</Collapse>",""],"description":"antCollapse","group":"ant"},"antConfirm":{"prefix":"antConfirm","body":["import { Modal } from 'antd';","const { confirm } = Modal;","","confirm({","    title: \"Are you sure delete this task?\",","    content: \"Some descriptions\",","    okText: \"确定\",","    okType: \"danger\",","    cancelText: \"取消\",","    onOk() {","        console.log(\"OK\");","    },","    onCancel() {","        console.log(\"Cancel\");","    }","})",""],"description":"antConfirm","group":"ant"},"antDatePicker":{"prefix":"antDatePicker","body":["import { DatePicker, TimePicker, Space } from 'antd';","const { RangePicker } = DatePicker;","","/**"," * 日期选择框：DatePicker、RangePicker"," * picker: date、week、month、quarter、year"," * 更多api见antd官网: https://ant.design/components/date-picker-cn/","*/","","<Space>","    <DatePicker","        onChange={(date, dateString) => {","            console.log(date, dateString);","        }}","    />","    <RangePicker","        showTime","        picker=\"week\"","    />","</Space>",""],"description":"antDatePicker","group":"ant"},"antDescription":{"prefix":"antDescription","body":["import { Descriptions } from 'antd';","","<Descriptions title=\"User Info\">","    <Descriptions.Item label=\"UserName\">Zhou Maomao</Descriptions.Item>","    <Descriptions.Item label=\"Telephone\">1810000000</Descriptions.Item>","    <Descriptions.Item label=\"Live\">Hangzhou, Zhejiang</Descriptions.Item>","    <Descriptions.Item label=\"Remark\">empty</Descriptions.Item>","    <Descriptions.Item label=\"Address\">","        No. 18, Wantang Road, Xihu District, Hangzhou, Zhejiang, China","    </Descriptions.Item>","</Descriptions>",""],"description":"antDescription","group":"ant"},"antDivider":{"prefix":"antDivider","body":["import { Divider } from 'antd';","","<div>","    <Divider type=\"vertical\" />","    <Divider dashed />","    <Divider>Text</Divider>","    <Divider orientation=\"right\">Right Text</Divider>","</div>",""],"description":"antDivider","group":"ant"},"antDrawer":{"prefix":"antDrawer","body":["import { Drawer } from 'antd';","","/**"," * mask：是否展示遮罩"," * maskClosable：点击蒙层是否允许关闭"," * closable：是否显示右上角的关闭按钮"," * destroyOnClose：关闭时销毁 Drawer 里的子元素"," * placement：抽屉的方向\t'top' | 'right' | 'bottom' | 'left'"," * zIndex：设置 Drawer 的 z-index","*/","<Drawer","    title=\"Basic Drawer\"","    placement=\"right\"","    closable={false}","    width={256}","    onClose={this.onClose}","    visible={this.state.visible}",">","    <p>Some contents...</p>","    <p>Some contents...</p>","    <p>Some contents...</p>","</Drawer>",""],"description":"antDrawer","group":"ant"},"antDropdown":{"prefix":"antDropdown","body":["import { Dropdown, Menu } from 'antd';","","<Dropdown","    overlay={","        <Menu>","            <Menu.Item>","                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\">","                    1st menu item","                </a>","            </Menu.Item>","            <Menu.Item>","                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.taobao.com/\">","                    2nd menu item","                </a>","            </Menu.Item>","            <Menu.Item>","                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.tmall.com/\">","                    3rd menu item","                </a>","            </Menu.Item>","        </Menu>","    }",">","    <a","        className=\"ant-dropdown-link\"","        onClick={e => e.preventDefault()}","    >","        Hover me <Icon type=\"down\" />","    </a>","</Dropdown>",""],"description":"antDropdown","group":"ant"},"antEmpty":{"prefix":"antEmpty","body":["import { Empty } from 'antd';","","<Empty","    image=\"https://gw.alipayobjects.com/mdn/miniapp_social/afts/img/A*pevERLJC9v0AAAAAAAAAAABjAQAAAQ/original\"","    imageStyle={{","        height: 60","    }}","    description={","        <span>","            Customize <a href=\"#API\">Description</a>","        </span>","    }",">","    <Button type=\"primary\">Create Now</Button>","</Empty>",""],"description":"antEmpty","group":"ant"},"antForm3":{"prefix":"antForm3","body":["","import { Form, Select, Input } from 'antd';","const { Option } = Select;","","const formItemLayout = {","    labelCol: {","        xs: { span: 24 },","        sm: { span: 6 },","    },","    wrapperCol: {","        xs: { span: 24 },","        sm: { span: 16 },","    },","};","","<Form {...formItemLayout}>","    <Form.Item","        label='姓名'","        validateStatus=\"error\"","    >","        <Input placeholder=\"请输入用户名\" />","    </Form.Item>","    <Form.Item","        label='账号'","        hasFeedback","        validateStatus=\"validating\"","        help=\"The information is being validated...\"","    >","        <Input placeholder=\"请输入账号\" />","    </Form.Item>","    <Form.Item","        label='邮箱'","        hasFeedback","        validateStatus=\"success\"","    >","        <Input placeholder=\"请输入邮箱\" />","    </Form.Item>","    <Form.Item label='团队'>","        <Select placeholder='请选择团队'>","            <Option value={1}>团队1</Option>","            <Option value={2}>团队2</Option>","            <Option value={3}>团队3</Option>","        </Select>","    </Form.Item>","</Form>",""],"description":"antForm3","group":"ant"},"antList":{"prefix":"antList","body":["import { List, Avatar } from 'antd';","","/**"," * List列表"," * 更多api见官网：https://ant.design/components/list-cn/","*/","","const data = [","    {","        title: 'Ant Design Title 1',","    },","    {","        title: 'Ant Design Title 2',","    },","    {","        title: 'Ant Design Title 3',","    },","    {","        title: 'Ant Design Title 4',","    },","];","<List","    itemLayout=\"horizontal\"","    dataSource={data}","    renderItem={item => (","        <List.Item>","            <List.Item.Meta","                avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}","                title={<a href=\"https://ant.design\">{item.title}</a>}","                description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"","            />","        </List.Item>","    )}","/>",""],"description":"antList","group":"ant"},"antModal":{"prefix":"antModal","body":["import { Modal } from 'antd';","","<Modal","    wrapClassName=\"modal-class\"","    title=\"modal弹窗\"","    visible={true || false}","    onOk={onOk}","    onCancel={onCancel}","    afterClose={afterClose}","    maskClosable={true}","    centered={false}","    cancelText=\"quxiao\"","    okText=\"queding\"","    okType=\"primary\"","    destroyOnClose // 默认关闭后状态不会自动清空, 如果希望每次打开都是新内容，请设置 destroyOnClose",">","","</Modal>",""],"description":"antModal","group":"ant"},"antNotification":{"prefix":"antNotification","body":["import { notification } from 'antd';","","// type：success，info，warning，error","notification.success({","    message: \"Notification Title\",","    description: \"This is the content of the notification.\"","})",""],"description":"antNotification","group":"ant"},"antPagination":{"prefix":"antPagination","body":["import { Pagination } from 'antd';","","<Pagination","    size=\"small\"","    total={85}","    showTotal={total => `Total ${total} items`}","    pageSize={20}","    defaultCurrent={1}","    showSizeChanger","    showQuickJumper","    onChange={(page, pageSize) => { }}","    onShowSizeChange={(page, pageSize) => { }}","    simple={false}\t\t// 简单模式","/>",""],"description":"antPagination","group":"ant"},"antPopconfirm":{"prefix":"antPopconfirm","body":["import { Popconfirm } from 'antd';","","<Popconfirm","    title=\"Are you sure delete this task?\"","    onConfirm={() => {","","    }}","    onCancel={() => {","","    }}","    okText=\"Yes\"","    cancelText=\"No\"","    placement=\"top\"\t// topLeft，top，topRight，leftTop，left，leftBottom，rightTop，right，rightBottom等",">","    <a href=\"#\">Delete</a>","</Popconfirm>",""],"description":"antPopconfirm","group":"ant"},"antPopover":{"prefix":"antPopover","body":["import { Popover } from 'antd';","","/**"," * 卡片类名：overlayClassName"," * 卡片样式：overlayStyle"," * 气泡位置：placement  气泡框位置，可选 top left right bottom topLeft topRight bottomLeft bottomRight leftTop leftBottom rightTop rightBottom"," * 触发行为：trigger  可选 hover/focus/click/contextMenu，默认hover"," */","","<Popover","    content={() => {","        return <div>内容</div>;","    }}","    title=\"Title\"","    trigger=\"click\"\t\t// trigger默认是hover",">","    <Button type=\"primary\">","        click me","    </Button>","</Popover>",""],"description":"antPopover","group":"ant"},"antProgress":{"prefix":"antProgress","body":["import { Progress } from 'antd';","","<Progress","    percent={70}","    status=\"exception\"\t// success exception normal active","    showInfo={false}","    size=\"default\"","/>",""],"description":"antProgress","group":"ant"},"antRadio":{"prefix":"antRadio","body":["import { Radio } from 'antd';","","<Radio.Group","    value={this.state.value}","    onChange={(e) => {","        const value = e.target.value;","    }}",">","    <Radio value={1}>A</Radio>","    <Radio value={2}>B</Radio>","    <Radio value={3}>C</Radio>","    <Radio value={4}>D</Radio>","</Radio.Group>;","","<Radio.Group","    defaultValue=\"a\"","    buttonStyle=\"solid\"",">","    <Radio.Button value=\"a\">Hangzhou</Radio.Button>","    <Radio.Button value=\"b\">Shanghai</Radio.Button>","    <Radio.Button value=\"c\">Beijing</Radio.Button>","    <Radio.Button value=\"d\">Chengdu</Radio.Button>","</Radio.Group>",""],"description":"antRadio","group":"ant"},"antResult":{"prefix":"antResult","body":["import { Result } from 'antd';","","<Result","    status=\"success\"","    title=\"Successfully Purchased Cloud Server ECS!\"","    subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"","    extra={[","        <Button type=\"primary\" key=\"console\">","            Go Console","        </Button>,","        <Button key=\"buy\">Buy Again</Button>,","    ]}","/>",""],"description":"antResult","group":"ant"},"antSelect":{"prefix":"antSelect","body":["import { Select } from 'antd';","const { Option } = Select;","","<Select","    value={\"jack\" || undefined}","    style={{ width: 120 }}","    onChange={() => {","","    }}","    placeholder=\"请选择\"",">","    <Option value=\"jack\">Jack</Option>","    <Option value=\"lucy\">Lucy</Option>","    <Option value=\"disabled\" disabled>","        Disabled","    </Option>","</Select>",""],"description":"antSelect","group":"ant"},"antSlide":{"prefix":"antSlide","body":["import { Slider, Switch } from 'antd';","","/**"," * range：双滑块模式"," * 更多api见官网：https://ant.design/components/slider-cn/","*/","<Slider","    range","    min={1}","    max={20}","    defaultValue={[20, 50]}","    disabled={disabled}","    onChange={(value) => {","        console.log('onChange: ', value);","    }}","/>",""],"description":"antSlide","group":"ant"},"antSpin":{"prefix":"antSpin","body":["import { Spin } from 'antd';","","/**"," * delay：延迟显示加载效果的时间（防止闪烁）\tms"," * indicator：加载指示符"," * 组件大小，可选值为 small default large：size"," * 是否为加载中状态：spinning"," * 当作为包裹元素时，可以自定义描述文案\t：tip"," * 包装器的类属性：wrapperClassName","*/","<div>","    <Spin />","    <Spin tip=\"Loading...\">","        <Alert","            message=\"Alert message title\"","            description=\"Further details about the context of this alert.\"","            type=\"info\"","        />","    </Spin>","</div>",""],"description":"antSpin","group":"ant"},"antStep":{"prefix":"antStep","body":["import { Steps } from 'antd';","const { Step } = Steps;","","<div>","    <Steps current={1}>","        <Step title=\"Finished\" description=\"This is a description.\" />","        <Step title=\"In Progress\" subTitle=\"Left 00:00:08\" description=\"This is a description.\" />","        <Step title=\"Waiting\" description=\"This is a description.\" />","    </Steps>","","    <Steps>","        <Step status=\"finish\" title=\"Login\" icon={<Icon type=\"user\" />} />","        <Step status=\"finish\" title=\"Verification\" icon={<Icon type=\"solution\" />} />","        <Step status=\"process\" title=\"Pay\" icon={<Icon type=\"loading\" />} />","        <Step status=\"wait\" title=\"Done\" icon={<Icon type=\"smile-o\" />} />","    </Steps>","</div>",""],"description":"antStep","group":"ant"},"antSwitch":{"prefix":"antSwitch","body":["import { Switch } from 'antd';","","<Switch","    className=\"switch-name\"","    checkedChildren=\"开\"","    unCheckedChildren=\"关\"","    loading={true}","    defaultChecked","    onChange={(value) => {","","    }}","/>",""],"description":"antSwitch","group":"ant"},"antTable":{"prefix":"antTable","body":["import { Table } from 'antd';","","const columns = [","    {","        title: 'Name',","        dataIndex: 'name',","        key: 'name',","        ellipsis: true,","        render: text => <a>{text}</a>,","    },","    {","        title: 'Age',","        dataIndex: 'age',","        key: 'age',","    },","    {","        title: 'Address',","        dataIndex: 'address',","        key: 'address',","    },","    {","        title: 'Tags',","        key: 'tags',","        dataIndex: 'tags',","        render: tags => (","            <span>","                tag","            </span>","        ),","    },","    {","        title: 'Action',","        key: 'action',","        render: (text, record) => (","            <span>","                <a>Invite {record.name}</a>","                <Divider type=\"vertical\" />","                <a>Delete</a>","            </span>","        ),","    },","];","","","<Table","    className='border-table'","    rowKey=\"id\"","    dataSource={[]}","    columns={columns}","    loading={true}","    scroll={{ x: 1900 }}","    pagination={{","        pageSize: 10,","        total: 100,","        current: 1,","        showTotal: total => `共${total}条`,","        onChange: () => { },","        onShowSizeChange: () => { },","        showQuickJumper: true,","        showSizeChanger: true","    }}","/>",""],"description":"antTable","group":"ant"},"antTabs":{"prefix":"antTabs","body":["import { Tabs } from 'antd';","const { TabPane } = Tabs;","","<Tabs","    defaultActiveKey=\"1\"","    onChange={(activeKey) => {","        console.log(\"current key\", activeKey);","    }}",">","    <TabPane tab=\"Tab 1\" key=\"1\">","        Content of Tab Pane 1","\t</TabPane>","    <TabPane tab=\"Tab 2\" key=\"2\">","        Content of Tab Pane 2","\t</TabPane>","    <TabPane tab=\"Tab 3\" key=\"3\">","        Content of Tab Pane 3","\t</TabPane>","</Tabs>",""],"description":"antTabs","group":"ant"},"antTimePicker":{"prefix":"antTimePicker","body":["import { TimePicker } from 'antd';","","/**"," * 时间选择框"," * value、defaultValue: 接收moment对象"," * 更多api见官网: https://ant.design/components/time-picker-cn/","*/","","<TimePicker","    defaultOpenValue={moment('00:00:00', 'HH:mm:ss')}","    onChange={(time, timeString) => {","        console.log(time, timeString);","    }}","/>",""],"description":"antTimePicker","group":"ant"},"antTimeline":{"prefix":"antTimeline","body":["import { Timeline } from 'antd';","","<Timeline>","    <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>","    <Timeline.Item>Solve initial network problems 2015-09-01</Timeline.Item>","    <Timeline.Item dot={<Icon type=\"clock-circle-o\" style={{ fontSize: '16px' }} />} color=\"red\">","        Technical testing 2015-09-01","    </Timeline.Item>","    <Timeline.Item>Network problems being solved 2015-09-01</Timeline.Item>","</Timeline>",""],"description":"antTimeline","group":"ant"},"antTooltip":{"prefix":"antTooltip","body":["/**"," * 卡片类名：overlayClassName"," * 卡片样式：overlayStyle"," * 气泡位置：placement  气泡框位置，可选 top left right bottom topLeft topRight bottomLeft bottomRight leftTop leftBottom rightTop rightBottom"," * 触发行为：trigger  可选 hover/focus/click/contextMenu，默认hover"," * */","<Tooltip","    title=\"prompt text\"","    placement=\"top\"",">","    <span>tooltip</span>","</Tooltip>",""],"description":"antTooltip","group":"ant"},"antTransfer":{"prefix":"antTransfer","body":["import { Transfer } from 'antd';","","/**"," * Transfer穿梭框"," * 更多api见官网: https://ant.design/components/transfer-cn/","*/","","<Transfer","    dataSource={mockData}","    titles={['Source', 'Target']}","    targetKeys={targetKeys}","    selectedKeys={selectedKeys}","    onSelectChange={(sourceSelectedKeys, targetSelectedKeys) => {","        console.log('sourceSelectedKeys:', sourceSelectedKeys);","        console.log('targetSelectedKeys:', targetSelectedKeys);","    }}","    onChange={(nextTargetKeys, direction, moveKeys) => {","        console.log('targetKeys:', nextTargetKeys);","        console.log('direction:', direction);","        console.log('moveKeys:', moveKeys);","    }}","    onScroll={(direction, e) => {","        console.log('direction:', direction);","        console.log('target:', e.target);","    }}","    render={item => item.title}","/>",""],"description":"antTransfer","group":"ant"},"antTree":{"prefix":"antTree","body":["import { Tree } from 'antd';","","/**"," * Tree树形控件"," * 更多api见官网: https://ant.design/components/tree-cn/","*/","","const treeData = [","    {","        title: 'parent 1',","        key: '0-0',","        children: [","            {","                title: 'parent 1-0',","                key: '0-0-0',","                disabled: true,","            },","            {","                title: 'parent 1-1',","                key: '0-0-1',","            },","        ],","    },","];","","<Tree","    checkable","    defaultExpandedKeys={['0-0-0', '0-0-1']}","    defaultSelectedKeys={['0-0-0', '0-0-1']}","    defaultCheckedKeys={['0-0-0', '0-0-1']}","    onSelect={(selectedKeys, info) => {","        console.log('selected', selectedKeys, info);","    }}","    onCheck={(checkedKeys, info) => {","        console.log('onCheck', checkedKeys, info);","    }}","    treeData={treeData}","/>",""],"description":"antTree","group":"ant"},"antTreeSelect":{"prefix":"antTreeSelect","body":["import { TreeSelect } from 'antd';","const { TreeNode } = TreeSelect;","","/**"," * TreeSelect树选择"," * 更多api见官网: https://ant.design/components/tree-select-cn/","*/","","<TreeSelect","    showSearch","    style={{ width: '100%' }}","    value={value}","    dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}","    placeholder=\"Please select\"","    allowClear","    treeDefaultExpandAll","    onChange={(value) => {","        console.log('value', value)","    }}",">","    <TreeNode value=\"parent 1\" title=\"parent 1\">","        <TreeNode value=\"parent 1-0\" title=\"parent 1-0\">","            <TreeNode value=\"leaf1\" title=\"leaf1\" />","            <TreeNode value=\"leaf2\" title=\"leaf2\" />","        </TreeNode>","        <TreeNode value=\"parent 1-1\" title=\"parent 1-1\">","            <TreeNode value=\"leaf3\" title={<b style={{ color: '#08c' }}>leaf3</b>} />","        </TreeNode>","    </TreeNode>","</TreeSelect>",""],"description":"antTreeSelect","group":"ant"},"antUpload":{"prefix":"antUpload","body":["import { Upload, message, Button, Icon } from 'antd';","","// https://3x.ant.design/components/upload-cn/","const props = {","    name: 'file',","    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',","    headers: {","        authorization: 'authorization-text',","    },","    onChange(info) {","        if (info.file.status !== 'uploading') {","            console.log(info.file, info.fileList);","        }","        if (info.file.status === 'done') {","            message.success(`${info.file.name} file uploaded successfully`);","        } else if (info.file.status === 'error') {","            message.error(`${info.file.name} file upload failed.`);","        }","    },","};","","<Upload {...props}>","    <Button>","        <Icon type=\"upload\" /> Click to Upload","    </Button>","</Upload>",""],"description":"antUpload","group":"ant"},"cssBorderRadius":{"prefix":"cssBorderRadius","body":["p {","    -webkit-border-radius: 3px;","    -moz-border-radius: 3px;","    border-radius: 3px;","}",""],"description":"cssBorderRadius","group":"css"},"cssBoxShadow":{"prefix":"cssBoxShadow","body":[".box-shadow {","    background: #F0F2F3;","    -webkit-box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.10), 0 10px 12px 0 rgba(170, 182, 206, 0.20);","    -moz-box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.10), 0 10px 12px 0 rgba(170, 182, 206, 0.20);","    box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.10), 0 10px 12px 0 rgba(170, 182, 206, 0.20);","}",""],"description":"cssBoxShadow","group":"css"},"cssColor":{"prefix":"cssColor","body":["// colors","@blue: #2E81F7;","@warning: #F7B035;","@error: #EF6555;","@success: #07C790;","","@bg: #F1F2F5;","@border: #B2BECD;","@disabled: #17233D;","@title: #17233D;","@content: #17233D;","","@color1: #58a8b6;","@color2: #5293C7;","@color3: #34495e;",""],"description":"cssColor","group":"css"},"cssEllipsis":{"prefix":"cssEllipsis","body":[".ellipsis {","    overflow: hidden;","    text-overflow: ellipsis;","    -o-text-overflow: ellipsis;","    -webkit-text-overflow: ellipsis;","    -moz-text-overflow: ellipsis;","    white-space: nowrap;","}",""],"description":"cssEllipsis","group":"css"},"cssFontface":{"prefix":"cssFontface","body":["@font-face {","    font-family: \"iconfont\";","    src: url('//at.alicdn.com/t/font_1030718_24xegj2rfxl.eot?t=1585192981836');","    /* IE9 */","    src: url('//at.alicdn.com/t/font_1030718_24xegj2rfxl.eot?t=1585192981836#iefix') format('embedded-opentype'),","        /* IE6-IE8 */","        url('./webfont.woff') format('woff2'),","        url('//at.alicdn.com/t/font_1030718_24xegj2rfxl.woff?t=1585192981836') format('woff'),","        url('//at.alicdn.com/t/font_1030718_24xegj2rfxl.ttf?t=1585192981836') format('truetype'),","        /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */","        url('//at.alicdn.com/t/font_1030718_24xegj2rfxl.svg?t=1585192981836#iconfont') format('svg');","    /* iOS 4.1- */","}","",".iconfont {","    font-family: \"iconfont\" !important;","    font-size: 16px;","    font-style: normal;","    -webkit-font-smoothing: antialiased;","    -moz-osx-font-smoothing: grayscale;","}",""],"description":"cssFontface","group":"css"},"cssInsetShadow":{"prefix":"cssInsetShadow","body":[".insetShadow {","    -moz-box-shadow: inset 0px 1px 9px 4px rgba(0, 0, 0, .15);","    -webkit-box-shadow: inset 0px 1px 9px 4px rgba(0, 0, 0, .15);","    box-shadow: inset 0px 1px 9px 4px rgba(0, 0, 0, .15);","}",""],"description":"cssInsetShadow","group":"css"},"cssNormalize":{"prefix":"cssNormalize","body":["/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */","","/* Document","       ========================================================================== */","","/**","     * 1. Correct the line height in all browsers.","     * 2. Prevent adjustments of font size after orientation changes in iOS.","     */","","html {","    line-height: 1.15;","    /* 1 */","    -webkit-text-size-adjust: 100%;","    /* 2 */","}","","body {","    margin: 0;","}","","h1 {","    font-size: 2em;","    margin: 0.67em 0;","}","","hr {","    box-sizing: content-box;","    /* 1 */","    height: 0;","    /* 1 */","    overflow: visible;","    /* 2 */","}","","pre {","    font-family: monospace, monospace;","    /* 1 */","    font-size: 1em;","    /* 2 */","}","","a {","    background-color: transparent;","}","","abbr[title] {","    border-bottom: none;","    /* 1 */","    text-decoration: underline;","    /* 2 */","    text-decoration: underline dotted;","    /* 2 */","}","","b,","strong {","    font-weight: bolder;","}","","code,","kbd,","samp {","    font-family: monospace, monospace;","    /* 1 */","    font-size: 1em;","    /* 2 */","}","","small {","    font-size: 80%;","}","","sub,","sup {","    font-size: 75%;","    line-height: 0;","    position: relative;","    vertical-align: baseline;","}","","sub {","    bottom: -0.25em;","}","","sup {","    top: -0.5em;","}","","img {","    border-style: none;","}","","button,","input,","optgroup,","select,","textarea {","    font-family: inherit;","    /* 1 */","    font-size: 100%;","    /* 1 */","    line-height: 1.15;","    /* 1 */","    margin: 0;","    /* 2 */","}","","button,","input {","    /* 1 */","    overflow: visible;","}","","button,","select {","    /* 1 */","    text-transform: none;","}","","button,","[type=\"button\"],","[type=\"reset\"],","[type=\"submit\"] {","    -webkit-appearance: button;","}","","button::-moz-focus-inner,","[type=\"button\"]::-moz-focus-inner,","[type=\"reset\"]::-moz-focus-inner,","[type=\"submit\"]::-moz-focus-inner {","    border-style: none;","    padding: 0;","}","","button:-moz-focusring,","[type=\"button\"]:-moz-focusring,","[type=\"reset\"]:-moz-focusring,","[type=\"submit\"]:-moz-focusring {","    outline: 1px dotted ButtonText;","}","","fieldset {","    padding: 0.35em 0.75em 0.625em;","}","","legend {","    box-sizing: border-box;","    /* 1 */","    color: inherit;","    /* 2 */","    display: table;","    /* 1 */","    max-width: 100%;","    /* 1 */","    padding: 0;","    /* 3 */","    white-space: normal;","    /* 1 */","}","","progress {","    vertical-align: baseline;","}","","textarea {","    overflow: auto;","}","","[type=\"checkbox\"],","[type=\"radio\"] {","    box-sizing: border-box;","    /* 1 */","    padding: 0;","    /* 2 */","}","","[type=\"number\"]::-webkit-inner-spin-button,","[type=\"number\"]::-webkit-outer-spin-button {","    height: auto;","}","","[type=\"search\"] {","    -webkit-appearance: textfield;","    /* 1 */","    outline-offset: -2px;","    /* 2 */","}","","[type=\"search\"]::-webkit-search-decoration {","    -webkit-appearance: none;","}","","::-webkit-file-upload-button {","    -webkit-appearance: button;","    /* 1 */","    font: inherit;","    /* 2 */","}","","details {","    display: block;","}","","summary {","    display: list-item;","}","","template {","    display: none;","}","","[hidden] {","    display: none;","}",""],"description":"cssNormalize","group":"css"},"cssRotate":{"prefix":"cssRotate","body":["i {","    transform: rotate(-90deg);","    -moz-transform: rotate(-90deg);","    -webkit-transform: rotate(-90deg);","}","","i:hover {","    transform: rotate(90deg);","    -moz-transform: rotate(90deg);","    -webkit-transform: rotate(90deg);","}",""],"description":"cssRotate","group":"css"},"cssScrollbar":{"prefix":"cssScrollbar","body":["&::-webkit-scrollbar {","    display: none;","}",""],"description":"cssScrollbar","group":"css"},"cssVerticalCenter":{"prefix":"cssVerticalCenter","body":[".verticalcenter {","    position: relative;","    top: 50%;","    -webkit-transform: translateY(-50%);","    -o-transform: translateY(-50%);","    transform: translateY(-50%);","}",""],"description":"cssVerticalCenter","group":"css"},"exportArray":{"prefix":"exportArray","body":["export const array = [","    {","        label: '姓名',","        value: 'name'","    },","    {","        label: '性别',","        value: 'sex'","    },","]",""],"description":"exportArray","group":"export"},"exportFunc":{"prefix":"exportFunc","body":["export const func = () => {","    return [];","}",""],"description":"exportFunc","group":"export"},"funcDispatch":{"prefix":"funcDispatch","body":["dispatch({","    type: \"name/setAttrValue\",","    payload: {","        name: 1","    }","});",""],"description":"funcDispatch","group":"func"},"funcForEach":{"prefix":"funcForEach","body":["const array = ['a', 'b', 'c'];","","array.forEach((item, index, array) => {","    console.log(item);","});",""],"description":"funcForEach","group":"func"},"funcMap":{"prefix":"funcMap","body":["{","    (list || []).map((item, index) => {","        console.log('item', item);","","        return (","            <div","                key={item.id}","                onClick={() => {","                    console.log('item', item);","                }}","                style={{","                    color: index === 1 ? \"red\" : \"\",","                    lineHeight: '24px'","                }}","            >","                {item.name}","            </div>","        )","    })","}",""],"description":"funcMap","group":"func"},"funcService":{"prefix":"funcService","body":["const params = {","    name: 'xiaoMing'","};","xxxxAPI.getXxxList(params).then(res => {","    if (res.success) {","        message.success(res.message);","    } else {","        message.error(res.message);","    }","}).catch(e => {","    console.log(e);","});",""],"description":"funcService","group":"func"},"funcTableRender":{"prefix":"funcTableRender","body":["render: (text, row) => {","    return (","        <span>","            <a>修改</a>","            <Divider type=\"vertical\" />","            <a>删除</a>","        </span>","    )","}",""],"description":"funcTableRender","group":"func"},"funcZhushi":{"prefix":"funcZhushi","body":["/**"," * @Author: xiaoming"," * @Date：2021/07/27"," * @page: 首页大盘"," */",""],"description":"funcZhushi","group":"func"},"pageClass":{"prefix":"pageClass","body":["import React, { PureComponent } from 'react';","import { Form, Input, Button, Select } from \"antd\";","import service from './service';        // service引入示例","import './index.less';                  // less样式引入示例","","export default class extends PureComponent {","    constructor(props) {","        super(props);","    }","","    state = {","        list: [],","        params: {","            curPage: 1,","            pageSize: 10","        }","    };","","    componentDidMount() {","        // 组件已经挂载","        // 示例：执行 this 里的方法","        this.getList();","    }","","    componentDidUpdate(prevProps, prevState) {","        // 组件更新","        // 示例","        // if ( prevState.flag !== this.state.flag ){}","    }","","    componentWillUnmount() {","        // 组件卸载","    }","","    getList = (obj) => {","        service.getUserList({","            ...this.state.params,","            ...obj","        }).then(res => {","            this.setState({","                list: res?.data?.list || []","            })","        })","    };","","    render() {","        let { list = [], params = {} } = this.state;","","        return (","            <div>","                hello world","            </div>","        );","    }","}",""],"description":"pageClass","group":"page"},"pageClassDva":{"prefix":"pageClassDva","body":["import React, { PureComponent } from 'react';","import { connect } from \"dva\";","import { Form, Input, Button, Select } from \"antd\";","import service from './service';        // service引入示例","import './index.less';                  // less样式引入示例","","class DemoPage extends PureComponent {","    constructor(props) {","        super(props);","    }","","    state = {","        list: [],","        params: {","            curPage: 1,","            pageSize: 10","        }","    };","","    componentDidMount() {","        // 组件已经挂载","        this.getList();","    }","","    componentDidUpdate(prevProps, prevState) {","        // 组件更新","        // 示例","        // if ( prevState.flag !== this.state.flag ){}","    }","","    componentWillUnmount() {","        // 组件卸载","    }","","    getList = (obj) => {","        service.getUserList({","            ...this.state.params,","            ...obj","        }).then(res => {","            this.setState({","                list: res?.data?.list || []","            })","        })","    };","","    render() {","        let { list, params } = this.state;","","        return (","            <div>","                hello world","            </div>","        );","    }","}","","export default connect(state => ({","    globalStore: state.global,","}))(DemoPage);","",""],"description":"pageClassDva","group":"page"},"pageForm3Modal":{"prefix":"pageForm3Modal","body":["import { Fragment } from 'react';","import { Form, Select, Icon, Input, Button, Checkbox, Modal } from 'antd';","","const { Option } = Select;","const formItemLayout = {","    labelCol: {","        xs: { span: 24 },","        sm: { span: 6 },","    },","    wrapperCol: {","        xs: { span: 24 },","        sm: { span: 16 },","    },","};","","export default Form.create()((props) => {","    const { visible, data = {}, form, close, onSubmit } = props;","    const { getFieldDecorator } = form;","","    const onOk = () => {","        form.validateFields((err, values) => {","            if (!err) {","                console.log('Received values of form: ', values);","                onSubmit && onSubmit(values);","            }","        });","    };","","    const teamList = [","        {","            \"id\": 1,","            \"name\": \"产品技术部\",","        },","        {","            \"id\": 2,","            \"name\": \"客户交付部\",","        },","        {","            \"id\": 3,","            \"name\": \"平台技术部\",","        },","        {","            \"id\": 4,","            \"name\": \"人力资源部\",","        },","        {","            \"id\": 5,","            \"name\": \"市场公关部\",","        }","    ]","","    return (","        <Modal","            title={data.id ? '编辑' : '新建'}","            visible={visible}","            destroyOnClose","            onCancel={close}","            onOk={onOk}","        >","            <Form {...formItemLayout}>","                <Form.Item label='姓名'>","                    {getFieldDecorator('nickname', {","                        initialValue: '小王',","                        rules: [{ required: true, message: '请输入用户名' }],","                    })(","                        <Input placeholder=\"请输入用户名\" />,","                    )}","                </Form.Item>","                <Form.Item label='账号'>","                    {getFieldDecorator('account', {","                        rules: [{ required: true, message: '请输入账号' }],","                    })(","                        <Input placeholder=\"请输入账号\" />,","                    )}","                </Form.Item>","                <Form.Item label='邮箱'>","                    {getFieldDecorator('email', {","                        rules: [{ required: false, message: '请输入邮箱' }],","                    })(","                        <Input placeholder=\"请输入邮箱\" />,","                    )}","                </Form.Item>","                <Form.Item label='团队'>","                    {getFieldDecorator('team', {","                        rules: [{ required: false, message: '请选择团队' }],","                    })(","                        <Select placeholder='请选择团队'>","                            {","                                (teamList || []).map((item, index) => (","                                    <Option","                                        key={item.id}","                                        value={item.id}","                                    >","                                        {item.name}","                                    </Option>","                                ))","                            }","                        </Select>,","                    )}","                </Form.Item>","            </Form>","        </Modal>","    );","})",""],"description":"pageForm3Modal","group":"page"},"pageForm4Class":{"prefix":"pageForm4Class","body":["import { Form, Input, Button, Select } from \"antd\";","","const { Option } = Select;","","const layout = {","    labelCol: {","        span: 8,","    },","    wrapperCol: {","        span: 16,","    },","};","const tailLayout = {","    wrapperCol: {","        offset: 8,","        span: 16,","    },","};","","export default class extends React.Component {","    formRef = React.createRef();","","    onFinish = (values) => {","        console.log(values);","    };","","    onFinishFailed = (errorInfo) => {","        console.log(\"Failed:\", errorInfo);","    };","","    onReset = () => {","        this.formRef.current.resetFields();","    };","","    render() {","        return (","            <Form","                {...layout}","                ref={this.formRef}","                initialValues={{ gender: \"male\", remember: true }}","                onFinish={this.onFinish}","                onFinishFailed={this.onFinishFailed}","            >","                <Form.Item","                    name=\"username\"","                    label=\"Username\"","                    rules={[{ required: true, message: \"Please input your username!\" },]}","                >","                    <Input />","                </Form.Item>","                <Form.Item","                    name=\"gender\"","                    label=\"Gender\"","                    rules={[{ required: true, },]}","                >","                    <Select","                        placeholder=\"Select a option and change input text above\"","                        allowClear","                    >","                        <Option value=\"male\">male</Option>","                        <Option value=\"female\">female</Option>","                        <Option value=\"other\">other</Option>","                    </Select>","                </Form.Item>","                <Form.Item","                    noStyle","                    shouldUpdate={(prevValues, currentValues) =>","                        prevValues.gender !== currentValues.gender","                    }","                >","                    {({ getFieldValue }) => {","                        return getFieldValue(\"gender\") === \"other\" ? (","                            <Form.Item","                                name=\"customizeGender\"","                                label=\"Customize Gender\"","                                rules={[","                                    {","                                        required: true,","                                    },","                                ]}","                            >","                                <Input />","                            </Form.Item>","                        ) : null;","                    }}","                </Form.Item>","                <Form.Item {...tailLayout}>","                    <Button type=\"primary\" htmlType=\"submit\">","                        Submit","                    </Button>","                    <Button htmlType=\"button\" onClick={this.onReset}>","                        Reset","                    </Button>","                </Form.Item>","            </Form>","        );","    }","}",""],"description":"pageForm4Class","group":"page"},"pageForm4Hook":{"prefix":"pageForm4Hook","body":["import { Form, Input, Button, Checkbox, Select } from \"antd\";","","const layout = {","    labelCol: { span: 8 },","    wrapperCol: { span: 16 },","};","const tailLayout = {","    wrapperCol: { offset: 8, span: 16 },","};","","export default () => {","    const [form] = Form.useForm();","","    const onFinish = (values) => {","        console.log(\"Success:\", values);","    };","","    const onFinishFailed = (errorInfo) => {","        console.log(\"Failed:\", errorInfo);","    };","","    const onReset = () => {","        form.resetFields();","    };","","    return (","        <Form","            {...layout}","            form={form}","            initialValues={{ gender: \"male\", remember: true }}","            onFinish={onFinish}","            onFinishFailed={onFinishFailed}","        >","            <Form.Item","                label=\"Username\"","                name=\"username\"","                rules={[","                    { required: true, message: \"Please input your username!\" },","                ]}","            >","                <Input />","            </Form.Item>","","            <Form.Item","                name=\"gender\"","                label=\"Gender\"","                rules={[{ required: true }]}","            >","                <Select","                    placeholder=\"Select a option and change input text above\"","                    allowClear","                >","                    <Select.Option value=\"male\">male</Select.Option>","                    <Select.Option value=\"female\">female</Select.Option>","                    <Select.Option value=\"other\">other</Select.Option>","                </Select>","            </Form.Item>","            <Form.Item","                noStyle","                shouldUpdate={(prevValues, currentValues) =>","                    prevValues.gender !== currentValues.gender","                }","            >","                {({ getFieldValue }) => {","                    return getFieldValue(\"gender\") === \"other\" ? (","                        <Form.Item","                            name=\"customizeGender\"","                            label=\"Customize Gender\"","                            rules={[{ required: true }]}","                        >","                            <Input />","                        </Form.Item>","                    ) : null;","                }}","            </Form.Item>","","            <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">","                <Checkbox>Remember me</Checkbox>","            </Form.Item>","","            <Form.Item {...tailLayout}>","                <Button type=\"primary\" htmlType=\"submit\">","                    Submit","                </Button>","                <Button htmlType=\"button\" onClick={onReset}>","                    Reset","                </Button>","            </Form.Item>","        </Form>","    );","};",""],"description":"pageForm4Hook","group":"page"},"pageForm4Modal":{"prefix":"pageForm4Modal","body":["import React, { useState } from \"react\";","import { Form, Input, Select, Modal, message, Button } from \"antd\";","import service from \"../service\";","","const formItemLayout = {","    labelCol: { span: 3 },","    wrapperCol: { span: 20 },","};","","export default (props) => {","    const { visible, editItem, search, onCancel } = props;","","    const isCreate = !editItem?.id;","","    const [form] = Form.useForm();","","    const [confirmLoading, setConfirmLoading] = useState(false);","","    const onFinish = (values) => {","        console.log(\"Received values from form: \", values);","","        const newValues = { ...editItem, ...values };","","        setConfirmLoading(true);","","        service[`${isCreate ? \"create\" : \"update\"}`](newValues)","            .then(() => {","                onCancel();","                search();","                message.success(\"保存成功\");","            })","            .finally(() => {","                setConfirmLoading(false);","            });","    };","","    const onReset = () => {","        form.resetFields();","    };","","    const onFinishFailed = (errorInfo) => {","        console.log(\"Failed:\", errorInfo);","    };","","    return (","        <Modal","            title={`${isCreate ? \"新建\" : \"更新\"}数据源`}","            visible={visible}","            destroyOnClose","            onCancel={onCancel}","            footer={","                <div>","                    <Button onClick={onCancel}>取消</Button>","                    <Button htmlType=\"button\" onClick={onReset}>","                        重置","                    </Button>","                    <Button","                        type=\"primary\"","                        loading={confirmLoading}","                        onClick={form.submit}","                    >","                        保存","                    </Button>","                </div>","            }","        >","            <Form","                {...formItemLayout}","                form={form}","                layout=\"horizontal\"","                onFinish={onFinish}","                onFinishFailed={onFinishFailed}","                initialValues={{","                    ...editItem,","                }}","            >","                <Form.Item","                    label=\"Username\"","                    name=\"username\"","                    rules={[","                        {","                            required: true,","                            message: \"Please input your username!\",","                        },","                    ]}","                >","                    <Input />","                </Form.Item>","                <Form.Item","                    name=\"gender\"","                    label=\"Gender\"","                    rules={[{ required: true }]}","                >","                    <Select","                        placeholder=\"Select a option and change input text above\"","                        allowClear","                    >","                        <Select.Option value=\"male\">male</Select.Option>","                        <Select.Option value=\"female\">female</Select.Option>","                        <Select.Option value=\"other\">other</Select.Option>","                    </Select>","                </Form.Item>","                <Form.Item","                    noStyle","                    shouldUpdate={(prevValues, currentValues) =>","                        prevValues.gender !== currentValues.gender","                    }","                >","                    {({ getFieldValue }) => {","                        return getFieldValue(\"gender\") === \"other\" ? (","                            <Form.Item","                                name=\"customizeGender\"","                                label=\"Customize Gender\"","                                rules={[{ required: true }]}","                            >","                                <Input />","                            </Form.Item>","                        ) : null;","                    }}","                </Form.Item>","            </Form>","        </Modal>","    );","};",""],"description":"pageForm4Modal","group":"page"},"pageHookDefalut":{"prefix":"pageHookDefalut","body":["import { useEffect, useState, Fragment } from \"react\";","import { connect } from \"dva\";","import { Input, Select, message, Modal } from \"antd\";","// import service from './service';","// import './index.less';","","export default props => {","    const { dispatch } = props;","    const [modalVisible, setModalVisible] = useState(false);","","    useEffect(() => {","        getSolutionList();","    }, []);","","    const getSolutionList = () => {","        // const params = {};","        // service.getSolutionList(params).then((data) => {","        //     console.log('data', data);","        // })","    };","","    return (","        <div className=\"hook-page\">","            hook page","        </div>","    );","};",""],"description":"pageHookDefalut","group":"page"},"pageHookDva":{"prefix":"pageHookDva","body":["import { useEffect, useState, Fragment } from \"react\";","import { connect } from \"dva\";","import { Input, Select, message, Modal } from \"antd\";","// import service from './service';","// import './index.less';","","const HookPage = props => {","    const { globalStore, dispatch } = props;","    const [modalVisible, setModalVisible] = useState(false);","","    useEffect(() => {","        getSolutionList();","    }, []);","","    const getSolutionList = () => {","        // const params = {};","        // service.getSolutionList(params).then((data) => {","        //     console.log('data', data);","        // })","    };","","    return (","        <div className=\"hook-page\">","            hook page","        </div>","    );","};","","export default connect(state => ({","    globalStore: state.global","}))(HookPage);",""],"description":"pageHookDva","group":"page"},"pageHookModal":{"prefix":"pageHookModal","body":["import { useEffect, useState, Fragment } from \"react\";","import { connect } from \"dva\";","import { Input, Select, message, Modal } from \"antd\";","","const HookModal = props => {","\tconst { globalStore, dispatch } = props;","\tconst [modalVisible, setModalVisible] = useState(false);","\tconst [modalItem, setModalItem] = useState(false);","","\tuseEffect(() => {","\t\tinit();","\t}, []);","","\tconst init = () => {","\t\tconsole.log(\"init function\");","\t};","","\tconst onOk = () => { };","\tconst onCancel = () => { };","\tconst afterClose = () => { };","","\treturn (","\t\t<div className=\"hook-modal\">","\t\t\t<Modal","\t\t\t\ttitle=\"HOOK弹窗\"","\t\t\t\tvisible={modalVisible}","\t\t\t\tonOk={onOk}","\t\t\t\tonCancel={onCancel}","\t\t\t\tafterClose={afterClose}","\t\t\t>","","\t\t\t</Modal>","\t\t</div>","\t);","};","","export default connect(state => ({","\tglobalStore: state.global","}))(HookModal);",""],"description":"pageHookModal","group":"page"},"pageHookTable":{"prefix":"pageHookTable","body":["import { useEffect, useState, Fragment } from \"react\";","import { connect } from \"dva\";","import { Table, Divider, message, Modal } from \"antd\";","","const HookTable = props => {","\tconst { pageSize, total, currentPage } = props;","\tconst [tableLoading, setTableLoading] = useState(false);","","\tconst dataSource = [","\t\t{","\t\t\tkey: \"1\",","\t\t\tname: \"胡彦斌\",","\t\t\tage: 32,","\t\t\taddress: \"西湖区湖底公园1号\"","\t\t},","\t\t{","\t\t\tkey: \"2\",","\t\t\tname: \"胡彦祖\",","\t\t\tage: 42,","\t\t\taddress: \"西湖区湖底公园1号\"","\t\t}","\t];","","\tconst columns = [","\t\t{","\t\t\ttitle: \"姓名\",","\t\t\tdataIndex: \"name\",","\t\t\tkey: \"name\",","\t\t\tellipsis: true","\t\t},","\t\t{","\t\t\ttitle: \"年龄\",","\t\t\tdataIndex: \"age\",","\t\t\tkey: \"age\"","\t\t},","\t\t{","\t\t\ttitle: \"住址\",","\t\t\tdataIndex: \"address\",","\t\t\tkey: \"address\"","\t\t},","\t\t{","\t\t\ttitle: \"操作\",","\t\t\tkey: \"action\",","\t\t\trender: (text, record) => (","\t\t\t\t<span>","\t\t\t\t\t<a>修改</a>","\t\t\t\t\t<Divider type=\"vertical\" />","\t\t\t\t\t<a>删除</a>","\t\t\t\t</span>","\t\t\t)","\t\t}","\t];","","\treturn (","\t\t<div className=\"hook-modal\">","\t\t\t<Table","\t\t\t\tclassName='border-table'","\t\t\t\trowKey=\"id\"","\t\t\t\tdataSource={dataSource}","\t\t\t\tcolumns={columns}","\t\t\t\tloading={tableLoading}","\t\t\t\tscroll={{ x: 1900 }}","\t\t\t\tpagination={{","\t\t\t\t\tpageSize,","\t\t\t\t\ttotal,","\t\t\t\t\tcurrent: currentPage,","\t\t\t\t\tshowTotal: total => `共${total}条`,","\t\t\t\t\tonChange: () => { },","\t\t\t\t\tonShowSizeChange: () => { },","\t\t\t\t\tshowQuickJumper: true,","\t\t\t\t\tshowSizeChanger: true","\t\t\t\t}}","\t\t\t/>","\t\t</div>","\t);","};","","export default connect(state => ({","\tglobalStore: state.global","}))(HookTable);",""],"description":"pageHookTable","group":"page"},"pageModel":{"prefix":"pageModel","body":["import { message } from \"antd\";","import service from \"./service\";","","export default {","    namespace: \"demo\",","    state: {","        apiReady: false,","        list: []","    },","    effects: {","        *getSolutionList({ payload }, { call, put, select }) {","            const { id } = yield select(state => state.demo);","            const res = yield call(service.getSolutionList, payload);","","            yield put({","                type: \"updateState\",","                payload: {","                    list: res,","                    apiReady: true","                }","            });","        }","    },","    reducers: {","        updateState(state, { payload }) {","            return {","                ...state,","                ...payload","            };","        }","    }","};",""],"description":"pageModel","group":"page"},"pageQueryList":{"prefix":"pageQueryList","body":["import { useState } from 'react';","import { QueryListScene, Handle } from 'tntd';","import { Button } from 'antd';","import service from './service';","","const { QueryForm, QueryList, Field, createActions } = QueryListScene;","const actions = createActions();","","export default () => {","    const [modalVisible, setModalVisible] = useState(false);","","    const query = (params = {}) => {","        const { current: curPage = 1, pageSize = 20, dateRange, ...rest } = params;","","        return service.query({","            ...rest,","            // dateRange: (dateRange || []).map(    // 对时间的处理","            //     date => date.format('YYYY-MM-DD HH:mm:ss')","            // ),","            curPage,","            pageSize","        }).then(data => ({","            ...data,","            data: data.list || [],","            current: data.curPage","        }));","    };","    const columns = [","        {","            title: '姓名',","            dataIndex: 'nickname',","            ellipsis: true,","        },","        {","            title: '工号',","            dataIndex: 'badge',","            ellipsis: true,","        },","        {","            title: '账号',","            dataIndex: 'account'","        },","        {","            title: '邮箱',","            dataIndex: 'email'","        },","        {","            title: '团队',","            dataIndex: 'team',","            render: (team, row) => {","                if (team) {","                    return team.name;","                }","            }","        },","        {","            title: '操作',","            dataIndex: 'operations',","            width: 250,","            render: (text, row) => {","                return (","                    <Handle>","                        <a","                            onClick={() => {","                                console.log(\"online\");","                            }}","                        >","                            上线","                        </a>","                        <a>查看</a>","                        <a>编辑</a>","                        <a>测试</a>","                        <a>导入</a>","                        <a>导出</a>","                    </Handle>","                )","            }","        }","    ];","    const onFormChange = (values, changeInfo) => {","        console.log('onFormChange', values, changeInfo);","","        if (['dateRange', 'type'].includes(changeInfo.name)) {","            actions.search(values);","        }","    };","","    return (","        <QueryListScene","            query={query}","            actions={actions}","            title='xx页面'","        >","            <QueryForm","                // initialValues={{","                //     type: 1","                // }}","                // renderActions={() => null}","                onChange={onFormChange}","                extraActions={","                    <Button","                        onClick={() => {","                            setModalVisible(true)","                        }}","                    >","                        添加","                    </Button>","                }","            >","                <Field","                    title=\"\"","                    name=\"nickname\"","                    type=\"input\"","                    props={{","                        placeholder: '请输入昵称',","                        onPressEnter: evt => {","                            const value = (evt.target.value || '').trim();","                            actions.setFormData({","                                ...actions.getFormData(),","                                nickname: value || undefined","                            });","                        }","                    }}","                />","                <Field","                    title=\"\"","                    name=\"dateRange\"","                    type=\"dateRange\"","                    props={{","                        // disabledDate: currentDate => {","                        //     const current = currentDate.format('YYYYMMDD');","                        //     return current >= moment().format('YYYYMMDD') || current <= moment().subtract(30, 'days').format('YYYYMMDD')","                        // }","                    }}","                />","                <Field","                    title=\"\"","                    name=\"type\"","                    type=\"select\"","                    props={{","                        options: [","                            { label: '类别1', value: 1 },","                            { label: '类别2', value: 2 }","                        ]","                    }}","                />","                <Field","                    title=\"\"","                    name=\"account\"","                    type=\"search\"","                    props={{","                        placeholder: '请输入账号',","                        enterButton: true,","                        allowClear: true,","                        onSearch: value => {","                            actions.setFormData({","                                ...actions.getFormData(),","                                account: value.trim() ? value.trim() : undefined","                            });","                        }","                    }}","                />","            </QueryForm>","            <QueryList columns={columns} />","        </QueryListScene>","    );","};",""],"description":"pageQueryList","group":"page"},"pageService":{"prefix":"pageService","body":["import createServices from \"@/services/createServices\";","","export default createServices({","\tgetSolutionList: {","\t\turl: \"/demo\"","\t},","\tcreateSolutionVersion: {","\t\turl: \"/demo\",","\t\tmethod: \"POST\"","\t}","});",""],"description":"pageService","group":"page"},"pageTabPage":{"prefix":"pageTabPage","body":["import { connect } from 'dva';","import { Tabs } from 'antd';","import TabOne from './TabOne';","import TabTwo from './TabTwo';","import TabThree from './TabThree';","import './index.less';","","const { TabPane } = Tabs;","","export default connect(","    state => ({","        globalStore: state.global,","        store: state.tabListPage","    })",")(props => (","    <Tabs className=\"tabs-page\">","        <TabPane tab=\"用户关联\" key=\"userRelations\">","            <TabOne {...props} />","        </TabPane>","        <TabPane tab=\"团伙事件\" key=\"gangEvents\">","            <TabTwo {...props} />","        </TabPane>","        <TabPane tab=\"团伙事件\" key=\"TabThree\">","            <TabThree {...props} />","        </TabPane>","    </Tabs>","));",""],"description":"pageTabPage","group":"page"},"pageUpload":{"prefix":"pageUpload","body":["import React, { useState } from \"react\";","import { InboxOutlined } from \"@ant-design/icons\";","import { Upload, message } from \"antd\";","","const { Dragger } = Upload;","","/**"," * value就是Upload组件中fileList"," * onChange就是更新value的值"," */","","export default ({value = [], onChange}) => {","","    const uploadProps = {","        onRemove: (file) => {","            const newFileList = [...value];","            const index = newFileList.indexOf(file);","            newFileList.splice(index, 1);","            onChange(newFileList)","        },","        beforeUpload: (file) => {","            const xmlMinetype = [","                \"application/vnd.ms-excel\",","                \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",","            ];","","            const isXML =","                xmlMinetype.includes(file.type) || /\\.xlsx?$/.test(file.name);","","            if (!isXML) {","                message.error(\"只能上传.xls或者.xlsx文件!\");","                return;","            }","","            if (file.size / 1024 / 1024 > 1) {","                message.error(\"上传的XML文件不能超过1M!\");","                return;","            }","","            onChange([...value, file]);","","            return false;","        },","        value","    };","    return (","        <Dragger {...uploadProps}>","            <p className=\"ant-upload-drag-icon\">","                <InboxOutlined />","            </p>","            <p className=\"ant-upload-text\">点击或将文件拖拽到这里</p>","            <p className=\"ant-upload-hint\">","                <span>","                    请先下载","                    <a","                        href={`${config.baseUrl}/standardField/download/template`}","                        onClick={(e) => e.stopPropagation()}","                    >","                        模板文件.xls","                    </a>","                    ，严格按照模板整理数据并上传xls文件，最大支持1M","                </span>","            </p>","        </Dragger>","    );","};",""],"description":"pageUpload","group":"page"},"tntHandle":{"prefix":"tntHandle","body":["import { Handle } from \"tntd\";","","<Handle>","    <a onClick={() => { console.log(\"online\"); }}>上线</a>","    <a>查看</a>","    <a>编辑</a>","    <a>测试</a>","    <a>导入</a>","    <a>导出</a>","</Handle>",""],"description":"tntHandle","group":"tnt"},"tntLayout":{"prefix":"tntLayout","body":["import { useEffect, useState, Fragment } from \"react\";","import { connect } from \"dva\";","import { Layout } from \"tntd\";","","export default props => {","    const menus = [","        {","            children: [","                {","                    code: \"dadicasesearch\",","                    enName: \"dadicasesearch\",","                    icon: \"home\",","                    menuName: \"案件检索\",","                    path: \"/orion/case/relation\"","                }","            ],","            code: \"casegraph\",","            enName: \"casegraph\",","            groupIcon: \"case\",","            groupName: \"案件分析\"","        },","        {","            children: [","                {","                    code: \"taglist\",","                    enName: \"taglist\",","                    icon: \"home\",","                    menuName: \"标签管理\",","                    path: \"/orion/tag/list\"","                },","                {","                    code: \"tagdata\",","                    enName: \"tagdata\",","                    icon: \"layer-color\",","                    menuName: \"打标数据管理\",","                    path: \"/orion/tag/datalist\"","                }","            ],","            code: \"tagmm\",","            enName: \"tagmm\",","            groupIcon: \"layer-color\",","            groupName: \"标签管理\"","        },","        {","            children: [","                {","                    code: \"QX0101\",","                    enName: \"Organization Manage\",","                    icon: \"org\",","                    menuName: \"机构管理\\t\",","                    path: \"/bridge/permission/organization\"","                },","                {","                    code: \"QX0102\",","                    enName: \"Role Manage\",","                    icon: \"role\",","                    menuName: \"角色管理\",","                    path: \"/bridge/permission/role\"","                },","                {","                    code: \"QX0103\",","                    enName: \"User Manage\",","                    icon: \"user-group\",","                    menuName: \"用户管理\",","                    path: \"/bridge/permission/user\"","                }","            ],","            code: \"permission\",","            enName: \"Permission Manage\",","            groupIcon: \"case\",","            groupName: \"权限管理\"","        },","        {","            children: [","                {","                    code: \"QX0201\",","                    enName: \"Function Register\",","                    icon: \"python\",","                    menuName: \"功能注册\",","                    path: \"/bridge/system/register\"","                },","                {","                    code: \"QX0202\",","                    enName: \"Solution\",","                    icon: \"python\",","                    menuName: \"解决方案\",","                    path: \"/bridge/system/solution\"","                },","                {","                    code: \"QX0203\",","                    enName: \"System Configuration\",","                    icon: \"Python\",","                    menuName: \"系统设置\",","                    path: \"/bridge/system/startup\"","                }","            ],","            code: \"QX0203\",","            enName: \"System Configuration\",","            groupIcon: \"setting\",","            groupName: \"解决方案\"","        }","    ];","    const userInfo = {","        \"account\": \"admin\",","        \"avatar\": \"male1\",","        \"expiration\": 1924963199000,","        \"firstLogin\": \"0\",","        \"gender\": 0,","        \"gmtCreate\": 1551771456000,","        \"gmtModified\": 1570607897000,","        \"lang\": \"cn\",","        \"layout\": \"default\",","        \"orgUuid\": \"a8202aea546f48979754bdd45c471b08\",","        \"roleUuids\": \"[\\\"ee8dbc99831b4a9cb17578b51bbb09e0\\\"]\",","        \"salt\": \"9ac81141a689494eb769d39956bf5656\",","        \"simplified\": 1,","        \"status\": 0,","        \"theme\": \"default\",","        \"tryDate\": 1571033960000,","        \"tryTime\": 1,","        \"userName\": \"超级管理员\",","        \"uuid\": \"c693e0ec0a2e4bf8b71eef8152d88a29\"","    };","","    const onMenuChange = param => {","        console.log('onMenuChange:', param);","    };","    const onMenuSelect = param => {","        console.log('onMenonMenuSelectuChange:', param);","    };","    const onLanguageChange = language => {","        console.log('onLanguageChange:', language);","    };","    const onThemeChange = theme => {","        console.log('onThemeChange:', theme);","    };","    const onAppChange = param => {","        console.log('onAppChange', param);","    };","    const onLogoClick = () => {","        console.log('logo click');","    };","","","    return (","        <Layout","            logo={<img src='/bifrost-resource/logo/logo9-color.svg' />}","            className=\"tntd-layout\"","            name=\"私有云全家桶\"","            enName=\"Private Cloud\"","            selectedAppKey=\"enterprice\"","            appList={[","                { key: 'movie', name: '电影图谱' },","                { key: 'enterprice', name: '企业图谱' }","            ]}","            userInfo={userInfo}","            selectedMenuKey=\"tagdata\"","            menus={menus}","            // isEmptyLayout={","            //     ['/bridge/singlePage'].includes(location.pathname)","            // }","            onMenuChange={onMenuChange}","            onMenuSelect={onMenuSelect}","            onLanguageChange={onLanguageChange}","            onThemeChange={onThemeChange}","            onAppChange={onAppChange}","            onLogoClick={onLogoClick}","        >","        </Layout>","    );","};",""],"description":"tntLayout","group":"tnt"},"tntPage":{"prefix":"tntPage","body":["import { Page } from \"tntd\";","const { Box } = Page;","","<Page","    title='用户详情页'","    goBack={() => {","        console.log('点击返回');","    }}","    center='白色背景在中间列'","    extra={","        <>","            <Button type=\"primary\">保存</Button>","            <Button>返回</Button>","        </>","    }","    inLayout={true}     // 是否在layout中使用",">","    {/* <div>页面自定义内容</div> */}","    <Box width=\"200\" title='列表'>","        第一列","    </Box>","    <Box mode=\"white\" title='详情'>","        第二列","    </Box>","    <Box width=\"200\" noPadding>","        第三列","    </Box>","</Page>",""],"description":"tntPage","group":"tnt"},"tntQueryList":{"prefix":"tntQueryList","body":["import { useState } from 'react';","import { QueryListScene, Handle } from 'tntd';","import { Button } from 'antd';","import service from './service';","","const { QueryForm, QueryList, Field, createActions } = QueryListScene;","const actions = createActions();","","export default () => {","    const [modalVisible, setModalVisible] = useState(false);","","    const query = (params = {}) => {","        const { current: curPage = 1, pageSize = 20, dateRange, ...rest } = params;","","        return service.query({","            ...rest,","            // dateRange: (dateRange || []).map(    // 对时间的处理","            //     date => date.format('YYYY-MM-DD HH:mm:ss')","            // ),","            curPage,","            pageSize","        }).then(data => ({","            ...data,","            data: data.list || [],","            current: data.curPage","        }));","    };","    const columns = [","        {","            title: '姓名',","            dataIndex: 'nickname',","            ellipsis: true,","        },","        {","            title: '工号',","            dataIndex: 'badge',","            ellipsis: true,","        },","        {","            title: '账号',","            dataIndex: 'account'","        },","        {","            title: '邮箱',","            dataIndex: 'email'","        },","        {","            title: '团队',","            dataIndex: 'team',","            render: (team, row) => {","                if (team) {","                    return team.name;","                }","            }","        },","        {","            title: '操作',","            dataIndex: 'operations',","            width: 250,","            render: (text, row) => {","                return (","                    <Handle>","                        <a","                            onClick={() => {","                                console.log(\"online\");","                            }}","                        >","                            上线","                        </a>","                        <a>查看</a>","                        <a>编辑</a>","                        <a>测试</a>","                        <a>导入</a>","                        <a>导出</a>","                    </Handle>","                )","            }","        }","    ];","    const onFormChange = (values, changeInfo) => {","        console.log('onFormChange', values, changeInfo);","","        if (['dateRange', 'type'].includes(changeInfo.name)) {","            actions.search(values);","        }","    };","","    return (","        <QueryListScene","            query={query}","            actions={actions}","            title='xx页面'","        >","            <QueryForm","                // initialValues={{","                //     type: 1","                // }}","                // renderActions={() => null}","                onChange={onFormChange}","                extraActions={","                    <Button","                        onClick={() => {","                            setModalVisible(true)","                        }}","                    >","                        添加","                    </Button>","                }","            >","                <Field","                    title=\"\"","                    name=\"nickname\"","                    type=\"input\"","                    props={{","                        placeholder: '请输入昵称',","                        onPressEnter: evt => {","                            const value = (evt.target.value || '').trim();","                            actions.setFormData({","                                ...actions.getFormData(),","                                nickname: value || undefined","                            });","                        }","                    }}","                />","                <Field","                    title=\"\"","                    name=\"dateRange\"","                    type=\"dateRange\"","                    props={{","                        // disabledDate: currentDate => {","                        //     const current = currentDate.format('YYYYMMDD');","                        //     return current >= moment().format('YYYYMMDD') || current <= moment().subtract(30, 'days').format('YYYYMMDD')","                        // }","                    }}","                />","                <Field","                    title=\"\"","                    name=\"type\"","                    type=\"select\"","                    props={{","                        options: [","                            { label: '类别1', value: 1 },","                            { label: '类别2', value: 2 }","                        ]","                    }}","                />","                <Field","                    title=\"\"","                    name=\"account\"","                    type=\"search\"","                    props={{","                        placeholder: '请输入账号',","                        enterButton: true,","                        allowClear: true,","                        onSearch: value => {","                            actions.setFormData({","                                ...actions.getFormData(),","                                account: value.trim() ? value.trim() : undefined","                            });","                        }","                    }}","                />","            </QueryForm>","            <QueryList columns={columns} />","        </QueryListScene>","    );","};",""],"description":"tntQueryList","group":"tnt"},"tntTitle":{"prefix":"tntTitle","body":["import { Title } from \"tntd\";","","<Title","    title='这是标题'","    subTitle='这是描述，相当于副标题'","    number={1}","    extra={<Button>这是extra信息</Button>}","/>",""],"description":"tntTitle","group":"tnt"}}